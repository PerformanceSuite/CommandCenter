name: E2E Tests

# End-to-end tests using Playwright
# Tests complete user workflows across multiple browsers
# Expected runtime: ~10-15 minutes per browser (parallelized)
#
# Browser matrix: chromium, firefox, webkit
# Mobile testing: separate job for mobile viewports
#
# To debug failures:
# 1. Download test artifacts from failed run
# 2. View screenshots and videos in playwright-report/
# 3. Check test-results/ for detailed logs

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests - ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: commandcenter_test
          POSTGRES_USER: commandcenter
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Install Python dependencies
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # Install E2E test dependencies
      - name: Install E2E dependencies
        working-directory: ./e2e
        run: npm ci

      # Cache Playwright browsers to speed up subsequent runs
      # Browsers are cached by Playwright version
      - name: Get Playwright version
        id: playwright-version
        working-directory: ./e2e
        run: echo "version=$(npm list @playwright/test --depth=0 --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-${{ matrix.browser }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-
            playwright-${{ runner.os }}-

      # Install Playwright browsers (uses cache if available)
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./e2e
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Setup environment variables
        run: |
          cat > .env << EOF
          DATABASE_URL=postgresql://commandcenter:testpassword@localhost:5432/commandcenter_test
          REDIS_URL=redis://localhost:6379
          CELERY_BROKER_URL=redis://localhost:6379/0
          CELERY_RESULT_BACKEND=redis://localhost:6379/0
          SECRET_KEY=test-secret-key-for-ci
          BASE_URL=http://localhost:3000
          API_URL=http://localhost:8000
          EOF

      - name: Run database migrations
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://commandcenter:testpassword@localhost:5432/commandcenter_test
        run: |
          alembic upgrade head

      - name: Start backend server
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://commandcenter:testpassword@localhost:5432/commandcenter_test
          REDIS_URL: redis://localhost:6379
        run: |
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 10
          curl --retry 10 --retry-delay 2 --retry-connrefused http://localhost:8000/health

      - name: Start Celery worker
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://commandcenter:testpassword@localhost:5432/commandcenter_test
          REDIS_URL: redis://localhost:6379
        run: |
          celery -A app.tasks worker --loglevel=info --concurrency=2 &
          sleep 5

      - name: Build and start frontend
        working-directory: ./frontend
        env:
          VITE_API_URL: http://localhost:8000
        run: |
          npm run build
          npx serve -s dist -l 3000 &
          sleep 5
          curl --retry 10 --retry-delay 2 --retry-connrefused http://localhost:3000

      - name: Run E2E tests - ${{ matrix.browser }}
        working-directory: ./e2e
        env:
          BASE_URL: http://localhost:3000
          API_URL: http://localhost:8000
        run: |
          npx playwright test --project=${{ matrix.browser }} --reporter=html,json,junit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}
          path: e2e/playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: e2e/test-results/
          retention-days: 7

      - name: Publish test results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: E2E Tests - ${{ matrix.browser }}
          path: e2e/playwright-report/junit.xml
          reporter: java-junit

  e2e-mobile:
    name: E2E Mobile Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: commandcenter_test
          POSTGRES_USER: commandcenter
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            e2e/package-lock.json

      - name: Install dependencies
        run: |
          cd backend && pip install -r requirements.txt -r requirements-dev.txt
          cd ../frontend && npm ci
          cd ../e2e && npm ci
          npx playwright install --with-deps chromium

      - name: Setup test environment
        run: |
          cat > .env << EOF
          DATABASE_URL=postgresql://commandcenter:testpassword@localhost:5432/commandcenter_test
          REDIS_URL=redis://localhost:6379
          SECRET_KEY=test-secret-key
          EOF

      - name: Run migrations and start services
        run: |
          cd backend
          alembic upgrade head
          uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          celery -A app.tasks worker --loglevel=info &
          sleep 10
          cd ../frontend
          npm run build
          npx serve -s dist -l 3000 &
          sleep 5

      - name: Run mobile E2E tests
        working-directory: ./e2e
        run: |
          npx playwright test --project=mobile-chrome --project=mobile-safari --reporter=html,json

      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-mobile-results
          path: e2e/playwright-report/
          retention-days: 30
