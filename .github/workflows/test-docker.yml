name: Docker Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-backend-docker:
    name: Backend Tests (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Enhanced Docker layer caching with GitHub Actions cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend-${{ hashFiles('backend/requirements.txt', 'backend/Dockerfile.test') }}
          restore-keys: |
            ${{ runner.os }}-buildx-backend-

      # Build with BuildKit cache integration
      - name: Build backend test image with cache
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.test
          push: false
          tags: commandcenter-test-backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          load: true

      # Move cache to avoid growing indefinitely
      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Start test dependencies
        run: |
          docker-compose -f docker-compose.test.yml up -d postgres-test redis-test

      - name: Wait for dependencies
        run: |
          timeout 30 sh -c 'until docker-compose -f docker-compose.test.yml exec -T postgres-test pg_isready -U test; do sleep 1; done'

      - name: Run backend tests
        run: |
          docker-compose -f docker-compose.test.yml up \
            --abort-on-container-exit \
            --exit-code-from test-backend \
            test-backend

      - name: Cleanup
        if: always()
        run: |
          docker-compose -f docker-compose.test.yml down -v

  test-frontend-docker:
    name: Frontend Tests (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Enhanced Docker layer caching for frontend
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-frontend
          key: ${{ runner.os }}-buildx-frontend-${{ hashFiles('frontend/package-lock.json', 'frontend/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-frontend-

      # Build with BuildKit cache integration
      - name: Build frontend test image with cache
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          target: test
          push: false
          tags: commandcenter-test-frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache-frontend
          cache-to: type=local,dest=/tmp/.buildx-cache-frontend-new,mode=max
          load: true

      # Move cache to avoid growing indefinitely
      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache-frontend
          mv /tmp/.buildx-cache-frontend-new /tmp/.buildx-cache-frontend

      - name: Run frontend tests
        run: |
          docker-compose -f docker-compose.test.yml up \
            --abort-on-container-exit \
            --exit-code-from test-frontend \
            test-frontend

      - name: Cleanup
        if: always()
        run: |
          docker-compose -f docker-compose.test.yml down -v
