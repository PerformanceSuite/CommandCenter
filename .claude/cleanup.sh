#!/bin/bash
# CommandCenter Cleanup Script
# Auto-generated by /end-session command
# Removes temporary files and caches

echo "üßπ Starting CommandCenter cleanup..."

# Python cache cleanup
echo "  Cleaning Python cache..."
find . -type d -name "__pycache__" -not -path "*/node_modules/*" -not -path "*/.venv/*" -not -path "*/venv/*" -exec rm -rf {} + 2>/dev/null
find . -type f -name "*.pyc" -delete 2>/dev/null
find . -type f -name "*.pyo" -delete 2>/dev/null
find . -type f -name "*.pyd" -delete 2>/dev/null

# Node.js cache cleanup (frontend)
if [ -d "frontend/node_modules" ]; then
  echo "  Cleaning Node.js cache..."
  rm -rf frontend/.vite 2>/dev/null
  rm -rf frontend/dist 2>/dev/null
  rm -rf frontend/.cache 2>/dev/null
fi

# E2E test artifacts
echo "  Cleaning E2E test artifacts..."
rm -rf test-results/.last-run.json 2>/dev/null
rm -rf playwright-report 2>/dev/null
rm -rf test-results 2>/dev/null

# Temporary files
echo "  Cleaning temporary files..."
find . -type f -name "*.tmp" -delete 2>/dev/null
find . -type f -name "*.log" -not -path "*/node_modules/*" -delete 2>/dev/null
find . -type f -name "*.swp" -delete 2>/dev/null
find . -type f -name "*.swo" -delete 2>/dev/null
find . -type f -name ".DS_Store" -delete 2>/dev/null
find . -type f -name "Thumbs.db" -delete 2>/dev/null

# Empty directories
echo "  Removing empty directories..."
find . -type d -empty -not -path "*/node_modules/*" -not -path "*/.git/*" -delete 2>/dev/null

# Memory management check
echo ""
echo "üìä Memory Management Status:"
if [ -f ".claude/memory.md" ]; then
  MEMORY_LINES=$(wc -l < .claude/memory.md)
  SESSION_COUNT=$(grep -c "^### Session [0-9]\+:" .claude/memory.md 2>/dev/null || echo "0")
  ARCHIVE_COUNT=$(ls -1 .claude/archives/*.md 2>/dev/null | wc -l | tr -d ' ')

  echo "  ‚Ä¢ memory.md: $MEMORY_LINES lines"
  echo "  ‚Ä¢ Sessions in memory: $SESSION_COUNT"
  echo "  ‚Ä¢ Archive files: $ARCHIVE_COUNT"

  # Check thresholds and provide feedback
  if [ "$MEMORY_LINES" -gt 2000 ]; then
    echo "  üö® CRITICAL: memory.md exceeds 2000 lines"
    echo "     Archive needed immediately!"
  elif [ "$MEMORY_LINES" -gt 1200 ]; then
    echo "  ‚ö†Ô∏è  WARNING: memory.md exceeds 1200 lines"
    echo "     Archive recommended at next session"
  elif [ "$MEMORY_LINES" -gt 800 ]; then
    echo "  ‚ö†Ô∏è  NOTICE: memory.md approaching limit ($MEMORY_LINES/800)"
    echo "     Consider archiving older sessions soon"
  else
    echo "  ‚úÖ Memory file size OK ($MEMORY_LINES/800 lines)"
  fi

  if [ "$SESSION_COUNT" -gt 15 ]; then
    echo "  ‚ö†Ô∏è  Too many sessions: $SESSION_COUNT (recommended: ‚â§10)"
  elif [ "$SESSION_COUNT" -gt 10 ]; then
    echo "  ‚ö†Ô∏è  Session count high: $SESSION_COUNT (optimal: 5-10)"
  fi
else
  echo "  ‚ö†Ô∏è  memory.md not found"
fi

echo ""
echo "‚úÖ Cleanup complete!"
