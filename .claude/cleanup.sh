#!/bin/bash
# CommandCenter - Session Cleanup Script
# Auto-generated by /end-session command

echo "🧹 Starting CommandCenter cleanup..."

# Navigate to project root
cd "$(dirname "$0")/.." || exit 1

# 1. Remove temporary files
echo "📁 Removing temporary files..."
find . -type f -name "*.tmp" -delete 2>/dev/null
find . -type f -name "*.log" -delete 2>/dev/null
find . -type f -name "*.swp" -delete 2>/dev/null
find . -type f -name ".DS_Store" -delete 2>/dev/null
find . -type f -name "Thumbs.db" -delete 2>/dev/null
find . -type f -name "*.bak" -delete 2>/dev/null
find . -type f -name "*~" -delete 2>/dev/null

# 2. Clean Python cache (backend)
if [ -d "backend" ]; then
    echo "🐍 Cleaning Python cache..."
    find backend -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null
    find backend -type f -name "*.pyc" -delete 2>/dev/null
    find backend -type f -name "*.pyo" -delete 2>/dev/null
    find backend -type f -name ".pytest_cache" -exec rm -rf {} + 2>/dev/null
    find backend -type f -name ".coverage" -delete 2>/dev/null
    find backend -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null
fi

# 3. Clean Node.js cache (frontend)
if [ -f "frontend/package.json" ]; then
    echo "📦 Cleaning Node.js cache..."
    rm -rf frontend/.vite 2>/dev/null
    rm -rf frontend/dist 2>/dev/null
    rm -rf frontend/coverage 2>/dev/null
    rm -rf frontend/.turbo 2>/dev/null
    # Note: Keeping node_modules as it's needed for development
fi

# 4. Clean Docker artifacts (if any local build artifacts exist)
echo "🐳 Cleaning Docker build artifacts..."
rm -rf .docker-cache 2>/dev/null

# 5. Update timestamps in memory.md
if [ -f ".claude/memory.md" ]; then
    echo "📝 Updating memory.md timestamp..."
    # Get current date
    CURRENT_DATE=$(date +"%Y-%m-%d")
    
    # Update Last Updated timestamp (macOS compatible)
    if [[ "$OSTYPE" == "darwin"* ]]; then
        sed -i '' "s/\*\*Last Updated\*\*:.*/\*\*Last Updated\*\*: $CURRENT_DATE/" .claude/memory.md
    else
        sed -i "s/\*\*Last Updated\*\*:.*/\*\*Last Updated\*\*: $CURRENT_DATE/" .claude/memory.md
    fi
fi

# 6. Remove empty directories
echo "🗑️  Removing empty directories..."
find . -type d -empty -not -path "./.git/*" -delete 2>/dev/null

# 7. Clean agent coordination artifacts (if stale)
if [ -d ".agent-coordination" ]; then
    echo "🤖 Cleaning stale agent artifacts..."
    # Remove any .lock files older than 1 day
    find .agent-coordination -type f -name "*.lock" -mtime +1 -delete 2>/dev/null
fi

# 8. Summary
echo ""
echo "✅ Cleanup complete!"
echo ""
echo "📊 Disk space saved:"
du -sh .git 2>/dev/null | awk '{print "   Git repository: " $1}'
if [ -d "frontend/node_modules" ]; then
    du -sh frontend/node_modules 2>/dev/null | awk '{print "   Node modules: " $1}'
fi
if [ -d "backend/.venv" ]; then
    du -sh backend/.venv 2>/dev/null | awk '{print "   Python venv: " $1}'
fi

echo ""
echo "🎯 Next steps:"
echo "   - Review git status: git status"
echo "   - Check for uncommitted work: git diff"
echo "   - Exit Claude Code when ready"
echo ""
